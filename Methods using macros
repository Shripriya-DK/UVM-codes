import uvm_pkg::*;
`include "uvm_macros.svh"

class trans extends uvm_sequence_item;
	rand int a;
	string s;
	`uvm_object_utils_begin(trans)
		`uvm_field_int(a,UVM_ALL_ON)
		`uvm_field_string(s,UVM_ALL_ON)
	`uvm_object_utils_end
	function new(string name = "trans");
		super.new(name);
	endfunction
	constraint c1{a>5;a<17;}
endclass

trans t1,t2,t3;

module top;
initial
	begin
	t1 = trans::type_id::create("t1");
	t1.randomize();
	t1.s = "maven";
///////////////PRINT//////////////////
	t1.print(uvm_default_table_printer);
	t1.print(uvm_default_tree_printer);
	t1.print(uvm_default_line_printer);
///////////////COPY///////////////////
	t2 = trans::type_id::create("t2");
	t2.copy(t1);
	t2.print(uvm_default_table_printer);
///////////////CLONE//////////////////
	$cast(t3,t1.clone());
	$display("T3 OBJECT");
	t3.print(uvm_default_table_printer);
	t3.s = "silicon";
	t1.print(uvm_default_table_printer);
	t3.print(uvm_default_table_printer);
///////////////COMPARE/////////////////
	if(t2.compare(t1))
		$display("MATCH DONE");
	else
		$display("MISMATCH");
	end
endmodule

