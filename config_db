import uvm_port::*;
`include "uvm_macros.svh"

class agent extends uvm_agent;
	`uvm_component_utils(agent)
	function new(string name="agent",uvm_component parent);
		super.new(name,parent);
	endfunction
	virtual function void build_phase(uvm_phase phase);
		super.build_phase(phase);
	endfunction
endclass

class agt_top extends uvm_env;
	`uvm_component_utils(agt_top)
	int n;
	agent agt[];
	function new(string name="agt_top",uvm_component parent);
		super.new(name,parent);
	endfunction
	virtual function void build_phase(uvm_phase phase);
		super.build_phase(phase);
		uvm_config_db#(int)::get(this,"","noofagents",n);
		agt = new[n];
		foreach(agt[i])
			agt[i]= agt::type_id::create($sformatf("agt[%0d]",i),this);
			$display("The no of agents are %0d",n);
	endfunction
endclass
	
class env extends uvm_env;
	`uvm_component_utils(env)
	agt_top agth;
	function new(string name="env",uvm_component parent);
		super.new(name,parent);
	endfunction
	virtual function void build_phase(uvm_phase phase);
		super.build_phase(phase);
		agth = agt_top::type_id::create("agth",this);
	endfunction
endclass

class test extends uvm_test;
	`uvm_component_utils(test)
	env enh;
	int no_of_agents=5;
	function new(string name="test",uvm_component parent);
		super.new(name,parent);
	endfunction
	virtual function void build_phase(uvm_phase phase);
		super.build_phase(phase);
		enh = env::type_id::create("enh",this);
		uvm_config_db#(int)::set(this,"enh.agtp","noofagents",no_of_agents);
	endfunction
	virtual function void end_of_elaboration_phase(uvm_phase phase);
		super.end_of_elaboration_phase(phase)
		uvm_top.print_topology;
	endfunction
endclass

module top;
	initial
		begin
			run_test("test");
		end
endmodule
